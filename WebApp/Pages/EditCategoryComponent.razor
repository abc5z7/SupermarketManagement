@page "/editcategory/{categoryId}"
@attribute [Authorize(Policy = "AdminOnly")]
@inject NavigationManager NavigationManager
@inject UseCases.UseCaseInterfaces.IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject UseCases.UseCaseInterfaces.IEditCategoryUseCase EditCategoryUseCase
<h3>编辑</h3>

@if (category != null)
{
	<EditForm Model="category" OnValidSubmit="OnValidSumit">
		<DataAnnotationsValidator>
		</DataAnnotationsValidator>
		<ValidationSummary>
		</ValidationSummary>
		<div class="form-group">
			<label for="name">名字</label>
			<InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
		</div>

		<div class="form-group">
			<label for="description">描述</label>
			<InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
		</div>

		<button type="submit" class="btn btn-primary">保存</button>
		<button type="button" class="btn btn-primary" @onclick="OnCancel">取消</button>
	</EditForm>
}
@code {
	[Parameter]
	public string categoryId{ get; set; }

	public Category category{ get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}
	protected override void OnParametersSet()
	{
		base.OnParametersSet();

		if (int.TryParse(this.categoryId, out int iCategoryId))
		{
			var cat = GetCategoryByIdUseCase.Execute(iCategoryId);
			this.category = new Category { CategoryId = cat.CategoryId, Name = cat.Name, Description = cat.Description };
		}
	}
	private void OnValidSumit()
	{
		EditCategoryUseCase.Execute(this.category);
		NavigationManager.NavigateTo("/categories");
	}
	private void OnCancel()
	{
		NavigationManager.NavigateTo("/categories");
	}
}
