
@page "/categories"
@inject NavigationManager NavigationManager
@inject UseCases.UseCaseInterfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.UseCaseInterfaces.IDeleteCategoryUseCase DeleteCategoryUseCase
<h3>管理类别</h3>

@if (categories != null)
{
	<table class="table">
		<thead>
			<tr>
				<th> 名字 </th>
				<th> 描述 </th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in categories)
			{
				<tr>
					<td> @item.Name</td>
					<td> @item.Description</td>
					<td>
						<button type="button" class="btn btn-link"
						@onclick="@(() => EditCategory(item))">编辑</button>
						<button type="button" class="btn btn-link"
								@onclick="@(() => DeleteCategory(item.CategoryId))">
							删除
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<br/>
	<button type="button" class="btn btn-primary" @onclick="OnClickAddCategory">增加类别</button>
}
@code {
	private List<Category> categories;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		LoadCategories();
	}

	private void LoadCategories()
	{
		categories = ViewCategoryUseCase.Execute()?.ToList();
	}

	private void OnClickAddCategory()
	{
		NavigationManager.NavigateTo("/addcategory");
	}

	private void EditCategory(Category category)
	{
		NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
	}
	private void DeleteCategory(int Id)
	{
		DeleteCategoryUseCase.Delete(Id);
		LoadCategories();
	}
}
