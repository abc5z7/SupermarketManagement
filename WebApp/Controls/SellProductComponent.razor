@inject UseCases.UseCaseInterfaces.IGetProductByIdUseCase GetProductByIdUseCase
@inject UseCases.UseCaseInterfaces.ISellProductUseCase SellProductUseCase

@if (SelectedProduct != null)
{
	@if (!string.IsNullOrWhiteSpace(errorMessage))
	{
		<div class="alert alert-danger">@errorMessage</div>
	}
	<EditForm Model="productToSell" OnValidSubmit="SellProduct">
		<DataAnnotationsValidator></DataAnnotationsValidator>
		<ValidationSummary></ValidationSummary>
		<div class="form-group">
			<label for="name">产品名</label>
			<input type="text" id="name" class="form-control" readonly value="@productToSell.Name" />
		</div>
		<div class="form-group">
			<label for="price">价格</label>
			<input type="text" id="price" class="form-control"
			readonly value="@(string.Format("{0:c}", productToSell.Price))" />
		</div>
		<div class="form-group">
			<label for="qty">数量</label>
			<InputNumber id="qty" @bind-Value="@productToSell.Quantity"
			class="form-control"></InputNumber>
		</div>
		<button type="submit" class="btn btn-primary">出售</button>
	</EditForm>

}

@code {
	private string errorMessage;

	private Product productToSell;

	[Parameter]
	public Product SelectedProduct { get; set; }

	[Parameter]
	public EventCallback<Product> OnProductSold { get; set; }

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
		if (SelectedProduct != null)
		{
			productToSell = new Product()
			{
				ProductId = SelectedProduct.ProductId,
				Name = SelectedProduct.Name,
				CategoryId = SelectedProduct.CategoryId,
				Price = SelectedProduct.Price,
				Quantity = 0,
			};
		}
		else
		{
			productToSell = null;
		}

	}
	private void SellProduct() 
	{
		var prod = GetProductByIdUseCase.Execute(productToSell.ProductId);
		if (productToSell.Quantity <= 0)
		{
			errorMessage = "数量需要大于0";
		}

		else if (prod.Quantity >= productToSell.Quantity)
		{
			OnProductSold.InvokeAsync(productToSell);
			errorMessage = string.Empty;
			SellProductUseCase.Execute(productToSell.ProductId, productToSell.Quantity.Value);
		}
		else
		{
			errorMessage = $"{prod.Name}仅剩{prod.Quantity}，数量不足";
		}
	}
}
